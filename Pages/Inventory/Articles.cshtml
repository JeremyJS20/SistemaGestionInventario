@page
@model SistemaGestionInventario.Pages.Inventory.ArticlesModel
@{
    ViewData["Title"] = "Index Articles page";
}

<div class="md:flex md:justify-between md:items-center">
    <div>
        <h2 class="text-lg leading-none font-semibold">Getión de Artículos</h2>
        <p class="text-muted-foreground text-sm">Administrar productos y especificaciones del inventario</p>
    </div>

    <div class="mt-3 md:mt-0">
        <button data-modal-target="article-modal" data-modal-toggle="article-modal" type="button" class="bg-primary hover:bg-primary/90 cursor-pointer flex items-center space-x-2 text-primary-foreground px-4 py-2 rounded">
            <svg xmlns="http://www.w3.org/2000/svg"
                 viewBox="0 0 24 24"
                 fill="none"
                 stroke="currentColor"
                 class="h-5 w-5">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M12 4v16m8-8H4" />
            </svg>
            <span>Nuevo Artículo</span>
        </button>
        <div id="article-modal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
            <div class="relative p-4">
                <div class="relative bg-white rounded-lg shadow-sm">
                    <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t border-gray-200">
                        <div>
                            <h3 class="text-xl font-semibold text-gray-900">
                                Nuevo Artículo
                            </h3>
                            <p class="text-gray-400">
                                Completa la información del nuevo artículo
                            </p>
                        </div>
                        <button id="cancel-btn" type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center" data-modal-hide="article-modal">
                            <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                            </svg>
                            <span class="sr-only">Close modal</span>
                        </button>
                    </div>
                    <div class="p-4 md:p-5 space-y-4">
                        <form id="articleForm" method="post">
                            <div class="mb-5 flex justify-between gap-2">
                                <div class="flex-1">
                                    <label asp-for="ArticleDto.Code" class="block mb-2 text-sm font-medium text-gray-900">Código del Artículo</label>
                                    <input asp-for="ArticleDto.Code" id="code" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] block w-full p-2.5" placeholder="LAP001" />
                                    <span asp-validation-for="ArticleDto.Code" class="text-red-600"></span>
                                </div>
                                <div class="flex-1">   
                                    <label asp-for="ArticleDto.Category" for="categoria" class="block mb-2 text-sm font-medium text-gray-900">Categoría</label>
                                    <select asp-items="Model.Categories" asp-for="ArticleDto.Category" id="categoria" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] block w-full p-2.5">
                                        <option selected disabled>Seleccionar categoria</option>
                                    </select>
                                    <span asp-validation-for="ArticleDto.Category" class="text-red-600"></span>
                                </div>
                            </div>
                            <div class="mb-5">
                                <label asp-for="ArticleDto.Name" class="block mb-2 text-sm font-medium text-gray-900">Nombre del Artículo</label>
                                <input asp-for="ArticleDto.Name" type="text" id="name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] block w-full p-2.5" placeholder="Nombre descriptivo del artículo" />
                                <span asp-validation-for="ArticleDto.Name" class="text-red-600"></span>
                            </div>
                            <div class="mb-5">
                                <label asp-for="ArticleDto.Description" class="block mb-2 text-sm font-medium text-gray-900">Descripción</label>
                                <textarea asp-for="ArticleDto.Description" id="descripcion" rows="4" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] block w-full p-2.5" placeholder="Descripción detallada del articulo"></textarea>
                                <span asp-validation-for="ArticleDto.Description" class="text-red-600"></span>
                            </div>
                            <div class="mb-5 flex justify-between gap-2">
                                <div class="flex-1">
                                    <label asp-for="ArticleDto.Price" class="block mb-2 text-sm font-medium text-gray-900">Precio</label>
                                    <input asp-for="ArticleDto.Price" type="number" min="0" value="0" id="precio" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] block w-full p-2.5" />
                                    <span asp-validation-for="ArticleDto.Price" class="text-red-600"></span>
                                </div>
                                <div class="flex-1">
                                    <label asp-for="ArticleDto.Stock" class="block mb-2 text-sm font-medium text-gray-900">Stock Actual</label>
                                    <input asp-for="ArticleDto.Stock" type="number" min="0" value="0" id="stock" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] block w-full p-2.5" />
                                    <span asp-validation-for="ArticleDto.Stock" class="text-red-600"></span>
                                </div>
                                <div class="flex-1">
                                    <label asp-for="ArticleDto.MinimumStock" class="block mb-2 text-sm font-medium text-gray-900">Stock Mínimo</label>
                                    <input asp-for="ArticleDto.MinimumStock" type="number" min="0" value="0" id="stockMin" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] block w-full p-2.5" />
                                    <span asp-validation-for="ArticleDto.MinimumStock" class="text-red-600"></span>
                                </div>
                            </div>
                            <div class="mb-5">
                                <label asp-for="ArticleDto.State" for="estado" class="block mb-2 text-sm font-medium text-gray-900">Estado</label>
                                <select asp-items="Model.States" asp-for="ArticleDto.State" id="estado" class="w-24 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] block p-2.5" selected></select>
                                <span asp-validation-for="ArticleDto.State" class="text-red-600"></span>
                            </div>
                        </form>
                    </div>
                    <div class="flex justify-end items-center p-4 md:p-5 border-t border-gray-200 rounded-b">
                        <button id="close-btn"  data-modal-hide="article-modal" type="button" class="py-2.5 px-5 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-sidebar-accent hover:text-white focus:z-10 focus:ring-4 focus:ring-gray-100">Cancelar</button>
                        <button id="create-btn" type="button" class="ms-3 text-white bg-primary hover:bg-sidebar-accent focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center">Crear Artículo</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="grid grid-cols-1 md:grid-cols-4 gap-4">
    <div data-slot="card" class="bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm">
        <div data-slot="card-content" class="p-4">
            <div class="flex items-center gap-2">
                <i data-lucide="package" class="w-5 h-5 text-blue-500"></i>
                <div>
                    <p class="text-sm text-muted-foreground">Total Artículos</p>
                    <p class="text-xl font-bold">@Model.Total</p>
                </div>
            </div>
        </div>
    </div>
    <div data-slot="card" class="bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm">
        <div data-slot="card-content" class="p-4">
            <div class="flex items-center gap-2">
                <i data-lucide="package" class="w-5 h-5 text-green-500"></i>
                <div>
                    <p class="text-sm text-muted-foreground">Activos</p>
                    <p class="text-xl font-bold">@Model.Activos</p>
                </div>
            </div>
        </div>
    </div>
    <div data-slot="card" class="bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm">
        <div data-slot="card-content" class="p-4">
            <div class="flex items-center gap-2">
                <i data-lucide="circle-alert" class="w-5 h-5 text-orange-500"></i>
                <div>
                    <p class="text-sm text-muted-foreground">Stock Bajo</p>
                    <p class="text-xl font-bold">@Model.StockBajo</p>
                </div>
            </div>
        </div>
    </div>
    <div data-slot="card" class="bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm">
        <div data-slot="card-content" class="p-4">
            <div class="flex items-center gap-2">
                <i data-lucide="package" class="w-5 h-5 text-purple-500"></i>
                <div>
                    <p class="text-sm text-muted-foreground">Categorías</p>
                    <p class="text-xl font-bold">@Model.Categories.Count</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", () => {

            const createBtn = document.querySelector('#create-btn');
            let form = document.querySelector('#articleForm');
            let modal = document.querySelector('#article-modal');
            let closeBtn = document.querySelector('#close-btn');
            let cancelBtn = document.querySelector('#cancel-btn');

            createBtn.addEventListener('click', () => {
                form.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));
            })

            closeBtn.addEventListener('click', () => {
                console.log(form.reset)
                form.reset();

                const validationMessages = form.querySelectorAll(".text-red-600");
                validationMessages.forEach(el => el.textContent = "");
            })

            cancelBtn.addEventListener('click', () => {
                console.log(form.reset)
                form.reset();

                const validationMessages = form.querySelectorAll(".text-red-600");
                validationMessages.forEach(el => el.textContent = "");
            })

            form.addEventListener('submit', (e) => {
                e.preventDefault();

                let form = e.target;
                let formData = new FormData(form);

                fetch(form.action + '?handler=Endpoint', {
                    method: 'POST',
                    headers: {
                      'RequestVerificationToken': formData.get('__RequestVerificationToken')
                    },
                    body: formData
                })
                .then(response => response.json())
                .then(result => {
                    form.querySelectorAll('[data-valmsg-for]').forEach(el => {
                        el.textContent = '';
                    });

                    if (result.success) {
                        closeBtn.click();
                        window.location.reload();
                    } else {
                        for (let field in result.errors) {
                            let msg = result.errors[field];
                            let span = form.querySelector(`[data-valmsg-for="${field}"]`);
                            if (span) {
                                span.textContent = msg;
                            }
                        }
                    }
                })
                .catch(err => {
                    console.error('Submit error', err);
                });
            });
        });
    </script>
}